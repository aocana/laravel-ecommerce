version: "3"

networks:
  laravel:

services:
  site:
    build:
      context: ./dockerfiles
      dockerfile: nginx.root.dockerfile
    container_name: nginx
    ports:
      - 8089:80
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - php
      - redis
      - pgsql
    networks:
      - laravel

  pgsql:
    image: postgres:14-alpine3.15
    container_name: pgsql
    ports:
      - 5439:5432
    environment:
      POSTGRES_DB: ecommerce
      POSTGRES_USER: ocana
      POSTGRES_PASSWORD: ocana
      SERVICE_TAGS: dev
      SERVICE_NAME: pgsql
    volumes:
      - ./pgsql:/var/lib/postgresql/data
    networks:
      - laravel

  php:
    build:
      context: ./dockerfiles
      dockerfile: php.root.dockerfile
    container_name: php
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - laravel

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - 6379:6379
    volumes:
      - ./redis:/data
    networks:
      - laravel

  meilisearch:
    image: getmeili/meilisearch:latest
    container_name: meilisearch
    ports:
      - "${FORWARD_MEILISEARCH_PORT:-7700}:7700"
    volumes:
      - ./meilisearch:/data.ms
    networks:
      - laravel

  composer:
    image: composer:2
    container_name: composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: root
    entrypoint: ["composer", "--ignore-platform-reqs"]
    networks:
      - laravel

  npm:
    image: node:13.7
    container_name: npm
    volumes:
      - ./src:/var/www/html
    ports:
      - 3000:3000
      - 3001:3001
    working_dir: /var/www/html
    entrypoint: ["npm"]
    networks:
      - laravel

  artisan:
    build:
      context: ./dockerfiles
      dockerfile: php.root.dockerfile
    container_name: artisan
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - pgsql
    working_dir: /var/www/html
    entrypoint: ["php", "/var/www/html/artisan"]
    networks:
      - laravel

  #mailhog:
  #  image: mailhog/mailhog:latest
  #  container_name: mailhog
  #  ports:
  #    - 1025:1025
  #    - 8025:8025
  #  networks:
  #    - laravel
